@using BookStore.ViewModels.Common
@model PagedResult<BookStore.ViewModels.Catalog.Categories.CategoryVm>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Scripts{
    <script>
        setTimeout(function () {
            $('#msgAlert').fadeOut('slow');
        }, 2000);
    </script>
}

<div class="container-fluid px-4">
    <h1 class="mt-4">Category List</h1>
    <ol class="breadcrumb mb-4">
        <li class="breadcrumb-item"><a href="/">Home Page</a></li>
        <li class="breadcrumb-item active">Category List</li>
    </ol>
    
    <div class="card mb-12">
        <div class="card-header">
            <div class="row">
                <div class="col-md-6 col-xs-12">
                    <a class="btn btn-success" asp-action="CreateCategory" asp-controller="Category">Create a new Category</a>
                </div>
                <div class="col-md-6 col-xs-12">
                    <form asp-action="Index" method="get">
                        <div class="row">
                            <div class="col-md-9">
                                <input type="text" placeholder="Search" value="@ViewBag.Keyword" name="keyword" class="form-control" />
                            </div>
                            <div class="col-md-3">
                                <button type="submit" class="btn btn-primary">Search</button>
                                <button type="button" onclick="window.location.href='/Category'" class="btn btn-dark">Reset</button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
        
        <div class="card-body">
            <div class="row">
                @if(ViewBag.SuccessMsg != null)
                {
                    <div id="msgAlert" class ="alert alert-success" role ="alert">
                        @ViewBag.SuccessMsg
                    </div>
                }                
            </div>

        </div>
            
        <div class="table-responsive">
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th>Category Id</th>
                        <th>Name</th>
                        <th>Parent Id</th>
                        <th>Seo Alias</th>
                        <th>SeoDescription</th>
                        <th>SeoTitle</th>
                        <th>Sort Order</th>
                        <th>Show On Home</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                @foreach (var item in Model.Items) {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.CategoryId)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Name)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ParentId)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.SeoAlias)
                            </td>  
                            <td>
                                @Html.DisplayFor(modelItem => item.SeoDescription)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.SeoTitle)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.SortOrder)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.IsShowOnHome)
                            </td>
                            <td>
                                @Html.ActionLink("EditCategory", "EditCategory", new {  id=item.CategoryId  }) |
                                @*Html.ActionLink("Details", "Details", new { id=item.CategoryId  }) |*@
                                @Html.ActionLink("DeleteCategory", "DeleteCategory", new { id=item.CategoryId })
                            </td>
                        </tr>
                }
                    </tbody>
                </table>
        </div>        
        @await Component.InvokeAsync("Pager", Model)
     </div>
</div>